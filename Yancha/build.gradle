buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.3+'

    }
}

apply plugin: 'android'

def version = readVersion(file("VERSION"))
println(version.toVersionCode())

android {
    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode version.toVersionCode()
        versionName version.toVersionName()
    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/MANIFEST.MF'
    }

    signingConfigs {
        release {
            storeFile file(project.properties.storeFile)
            storePassword project.properties.storePassword
            keyAlias project.properties.storeAlias
            keyPassword project.properties.keyPassword
        }
    }

    buildTypes {

        // 本番(Playストア)
        release {
            debuggable false
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }

        // ステージング(Playストア アルファ版)
        alpha.initWith(buildTypes.release)
        alpha {
            debuggable true
            packageNameSuffix ".alpha"
            versionNameSuffix "-alpha"
        }

        // デバッグ(開発環境)
        debug {
            debuggable true
            runProguard false
            packageNameSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    //TODO ぼちぼちつぶしていこう
    lintOptions {
        abortOnError false
    }

}

repositories {
    maven { url 'https://raw.github.com/ichigotake/ColorfulSweets/develop/repository' }
    maven { url 'https://raw.github.com/ichigotake/Android-YanchaSDK/develop/repository' }
    maven { url 'https://raw.github.com/ichigotake/guava-libraries-optional/master/repository' }
}

dependencies {
    compile fileTree(dir: 'src/main/libs', include: '*.jar')
    compile 'com.google.guava:guava-optional:16.0.1'
    compile 'net.ichigotake.colorfulsweets:ics:0.0.4'
    compile 'net.ichigotake.yancha:YanchaSDK:0.0.1'
    compile 'de.greenrobot:eventbus:2.2.0'
    compile 'com.google.android:support-v4:r7' // for 'de.greenrobot:eventbus'
}


android.applicationVariants.all { variant ->
    variant.mergeResources.dependsOn {
        def resourceFile = file("src/main/res/values/_app.xml")
        switch (variant.buildType.name) {
            case "release":
                writeResources(resourceFile, ["yc_app_name": appName])
                break
            case "alpha":
                writeResources(resourceFile, ["yc_app_name": appName + "alpha"])
                break
            case "debug":
                writeResources(resourceFile, ["yc_app_name": appName + " dev"])
                break
        }
    }
}
