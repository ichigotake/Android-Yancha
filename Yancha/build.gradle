apply plugin: 'android'

def version = readVersion(file("VERSION"))

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode version.toVersionCode()
        versionName version.toVersionName()

        buildConfigField "String", "CRASH_REPORTER_KEY", "\"${project.properties.crashReporterKey}\""
    }


    signingConfigs {
        release {
            storeFile file(project.properties.storeFile)
            storePassword project.properties.storePassword
            keyAlias project.properties.storeAlias
            keyPassword project.properties.keyPassword
        }
    }

    buildTypes {

        release {
            debuggable false
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            runProguard false
            packageNameSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    //TODO ぼちぼちつぶしていこう
    lintOptions {
        abortOnError false
    }

}

def repositoryDir = new File(rootDir, 'repository')
repositories {
    maven { url 'https://raw.github.com/ichigotake/ColorfulSweets/develop/repository' }
    maven { url 'https://raw.github.com/ichigotake/Android-YanchaSDK/develop/repository' }
    maven { url 'https://raw.github.com/ichigotake/guava-libraries-optional/master/repository' }
    mavenLocal()
    maven { url "file://${repositoryDir}" }
}

dependencies {
    compile fileTree(dir: 'src/main/libs', include: '*.jar')
    compile 'net.ichigotake.yancha:app-stock:0.0.3'
    compile 'com.google.guava:guava-optional:16.0.1'
    compile 'net.ichigotake.colorfulsweets:common:0.0.5'
    compile 'net.ichigotake.colorfulsweets:ics:0.0.5'
    compile 'net.ichigotake.yancha:yancha-sdk:0.0.5'
    compile 'de.greenrobot:eventbus:2.2.0'
    compile 'com.google.android:support-v4:r7' // for 'de.greenrobot:eventbus'
}

android.applicationVariants.all { variant ->
    variant.mergeResources.dependsOn {
        def resourceDir = file("src/${variant.buildType.name}/res/values")
        def resourceFile = file("${resourceDir}/_app.xml")
        def resources = [
                "yc_app_name": project.properties.appName,
        ]

        resourceDir.mkdirs()
        if (variant.buildType.name != 'release') {
            resources.yc_app_name += variant.buildType.versionNameSuffix
        }

        writeResources(resourceFile, resources)
    }
}
